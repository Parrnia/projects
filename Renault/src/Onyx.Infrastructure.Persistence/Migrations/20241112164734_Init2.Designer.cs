// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Onyx.Infrastructure.Persistence;

#nullable disable

namespace Onyx.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241112164734_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BadgeProductAttributeOption", b =>
                {
                    b.Property<int>("BadgesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductAttributeOptionsId")
                        .HasColumnType("int");

                    b.HasKey("BadgesId", "ProductAttributeOptionsId");

                    b.HasIndex("ProductAttributeOptionsId");

                    b.ToTable("BadgeProductAttributeOption");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("نظر دهنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ ثبت");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasComment("پست مربوط به نظر");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("متن");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("مولف پست");

                    b.Property<int>("BlogCategoryId")
                        .HasColumnType("int")
                        .HasComment("زیر دسته بندی بلاگ");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("متن");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ انتشار");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)")
                        .HasComment("تصویر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("عنوان");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BlogCategoryId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.WidgetComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("نظر دهنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ ثبت");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("پاسخ ها");

                    b.Property<string>("Text")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("متن");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("WidgetComments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftFamilyId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int")
                        .HasComment("برند");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("VehicleBrandId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Kind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("نام فارسی");

                    b.Property<int>("ModelId")
                        .HasColumnType("int")
                        .HasComment("مدل");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftKindId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Kinds");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int")
                        .HasComment("خانواده");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftModelId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("BrandLogo")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر لوگو");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasComment("کشور");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftBrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductBrands");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VinNumber")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasComment("شماره vin");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("KindId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("BrandLogo")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر لوگو");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasComment("کشور");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftBrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("VehicleBrands");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlogParentCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Image")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام لاتین");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.HasIndex("BlogParentCategoryId");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BlogCategories");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.BlogCategoryCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogCategoryId")
                        .HasColumnType("int")
                        .HasComment("دسته بندی بلاگ");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("BlogCategoryId");

                    b.HasIndex("FieldName")
                        .IsUnique();

                    b.ToTable("BlogCategoryCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryType")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Image")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام فارسی");

                    b.Property<Guid?>("MenuImage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام لاتین");

                    b.Property<string>("ProductCategoryNo")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasComment("شماره دسته کالا");

                    b.Property<int?>("ProductParentCategoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("Related7SoftProductCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProductParentCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.ProductCategoryCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasComment("دسته بندی محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("FieldName")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductCategoryCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CustomerSupportCluster.CustomerTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("شناسه مشتری");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام مشتری");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شماره تماس مشتری");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ ثبت");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("پیام");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("موضوع");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerTickets");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.FilesCluster.StoredFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasComment("دسته بندی فایل");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("پسوند فایل");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("شناسه قایل");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasComment("اندازه فایل");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مسیر پوشه فایل");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("آپلود کننده فایل");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2")
                        .HasComment("زمان آپلود");

                    b.Property<string>("UploadName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام اصلی فایل آپلود شده");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("StoredFiles");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.AboutUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageContent")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("آیا پیش فرض است؟");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("محتوای متنی");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("AboutUsEnumerable");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.CorporationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CallUs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("ارتباط با ما");

                    b.Property<string>("ContactUsMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("پیام ارتباط با ما");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DesktopLogo")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("لوکوی دسکتاپ");

                    b.Property<string>("EmailAddresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FooterLogo")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("لوگو فوتر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("آیا پیش فرض است؟");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationAddresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MobileLogo")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("لوگوی تلفن همراه");

                    b.Property<string>("PhoneNumbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoweredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("حامی");

                    b.Property<Guid>("SliderBackGroundImage")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر پس زمینه اسلایدر");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CorporationInfos");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.CostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CostTypeEnum")
                        .HasColumnType("int")
                        .HasComment("نوع هزینه");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("متن");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("مقدار");

                    b.HasKey("Id");

                    b.HasIndex("CostTypeEnum")
                        .IsUnique();

                    b.HasIndex("Text")
                        .IsUnique();

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("CostTypes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftCountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("متن پاسخ");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("متن سوال");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int")
                        .HasComment("موضوع سوال");

                    b.HasKey("Id");

                    b.HasIndex("QuestionText")
                        .IsUnique();

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AboutUsId")
                        .HasColumnType("int");

                    b.Property<Guid>("Avatar")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر پروفایل");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("نام");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("سمت");

                    b.HasKey("Id");

                    b.HasIndex("AboutUsId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AboutUsId")
                        .HasColumnType("int");

                    b.Property<Guid>("Avatar")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر پروفایل");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("نام");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("سمت");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasComment("امتیاز");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("دیدگاه");

                    b.HasKey("Id");

                    b.HasIndex("AboutUsId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.BlockBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlockBannerPosition")
                        .HasColumnType("int")
                        .HasComment("موقعیت روی صفحه");

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("متن کلید");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Image")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ دکمه اولیه");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان");

                    b.HasKey("Id");

                    b.HasIndex("BlockBannerPosition")
                        .IsUnique();

                    b.ToTable("BlockBanners");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.Carousel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ButtonLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("برچسب دکمه");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DesktopImage")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر دسکتاپ");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("جزئیات");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MobileImage")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر موبایل");

                    b.Property<string>("Offer")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("تخفیف");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("ترتیب");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("آدرس url");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Carousels");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.FooterCluster.FooterLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FooterLinkContainerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("آدرس url");

                    b.HasKey("Id");

                    b.HasIndex("FooterLinkContainerId");

                    b.ToTable("FooterLinks");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.FooterCluster.FooterLinkContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("هدر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("ترتیب");

                    b.HasKey("Id");

                    b.ToTable("FooterLinkContainers");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.FooterCluster.SocialLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Icon")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("آیکون");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("آدرس url");

                    b.HasKey("Id");

                    b.ToTable("SocialLinks");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.HeaderCluster.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Image")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentLinkId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("آدرس url");

                    b.HasKey("Id");

                    b.HasIndex("ParentLinkId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtnPrimaryColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ دکمه اولیه");

                    b.Property<string>("BtnPrimaryHoverColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ هاور دکمه اولیه");

                    b.Property<string>("BtnSecondaryColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ دکمه ثانویه");

                    b.Property<string>("BtnSecondaryHoverColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ هاور دکمه ثانویه");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderAndFooterColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ هدر و فوتر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThemeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ قالب");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("زمان سفارش");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام مشتری");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("مشتری سفارش دهنده");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام خانوادگی مشتری یا کد اقتصادی");

                    b.Property<int>("CustomerTypeEnum")
                        .HasColumnType("int");

                    b.Property<double>("DiscountPercentForRole")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)")
                        .HasComment("درصد تخفیف محاسبه شده بر اساس نقش");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("کد ملی");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("شماره");

                    b.Property<int>("PersonType")
                        .HasColumnType("int")
                        .HasComment("نوع هویت مشتری");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شماره برای ارسال پیامک");

                    b.Property<double>("Quantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("تعداد");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("جمع قیمت کل محصولات");

                    b.Property<double>("TaxPercent")
                        .HasColumnType("float")
                        .HasComment("درصد مالیات");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("رمز");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("مبلغ پرداختی");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountPercentForProduct")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)")
                        .HasComment("درصد تخفیف محاسبه شده بر روی کالا");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("سفارش مرتبط");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("قیمت واحد");

                    b.Property<int>("ProductAttributeOptionId")
                        .HasColumnType("int");

                    b.Property<string>("ProductLocalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام فارسی قطعه");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام لاتین قطعه");

                    b.Property<string>("ProductNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("کد کالا");

                    b.Property<double>("Quantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("تعداد");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("جمع کل قیمت سفارش");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductAttributeOptionId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItemOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int")
                        .HasComment("آیتم سفارش مرتبط");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemOptions");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItemProductAttributeOptionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام گزینه ساختاری");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار ویژگی محصول");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemProductAttributeOptionValue");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderStateBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderStateBases");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("سفارش مرتبط");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("مبلغ");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderTotals");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Payments.OrderPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderPayment");

                    b.HasDiscriminator().HasValue("OrderPayment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.CountingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<int?>("CountingUnitTypeId")
                        .HasColumnType("int")
                        .HasComment("نوع واحد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDecimal")
                        .HasColumnType("bit")
                        .HasComment("واحد اعشاری");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftCountingUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("CountingUnitTypeId");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CountingUnits");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.CountingUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftCountingUnitTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CountingUnitTypes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("کد شمارنده");

                    b.Property<int?>("ColorOptionId")
                        .HasColumnType("int");

                    b.Property<int?>("CommonCountingUnitId")
                        .HasColumnType("int")
                        .HasComment("واحد شمارش رایج");

                    b.Property<int>("Compatibility")
                        .HasColumnType("int")
                        .HasComment("سازگاری محصول");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasComment("کد کشور");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("توضیحات");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasComment("تعداد ماه گارانتی");

                    b.Property<string>("Excerpt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("گزیده");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(12,3)")
                        .HasComment("وزن ناخالص کالا");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(12,3)")
                        .HasComment("ارتفاع کالا");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(12,3)")
                        .HasComment("طول کالا");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام فارسی قطعه");

                    b.Property<int?>("MainCountingUnitId")
                        .HasColumnType("int")
                        .HasComment("واحد شمارش اصلی");

                    b.Property<int?>("MaterialOptionId")
                        .HasColumnType("int");

                    b.Property<int?>("Mileage")
                        .HasColumnType("int")
                        .HasComment("کیلومتر گارانتی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام لاتین قطعه");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(12,3)")
                        .HasComment("وزن خالص کالا");

                    b.Property<string>("OldProductNo")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasComment("کد کالا قبلی");

                    b.Property<double>("OrderRate")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("ضریب سفارش دهی");

                    b.Property<int>("ProductAttributeTypeId")
                        .HasColumnType("int")
                        .HasComment("نوع ویژگی محصول");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int")
                        .HasComment("برند");

                    b.Property<string>("ProductCatalog")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("کد شناسایی کالا در کاتالوگ");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasComment("زیردسته کالا");

                    b.Property<string>("ProductNo")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasComment("کد کالا");

                    b.Property<int?>("ProductStatusId")
                        .HasColumnType("int")
                        .HasComment("کد وضعیت کالا");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int")
                        .HasComment("کد نوع کالا");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int")
                        .HasComment("کد تامین کننده");

                    b.Property<Guid?>("Related7SoftProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("واحد نگهداری موجودی");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.Property<decimal?>("VolumeWeight")
                        .HasColumnType("decimal(12,3)")
                        .HasComment("وزن حجمی کالا");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(12,3)")
                        .HasComment("عرض کالا");

                    b.HasKey("Id");

                    b.HasIndex("ColorOptionId");

                    b.HasIndex("CommonCountingUnitId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("MainCountingUnitId");

                    b.HasIndex("MaterialOptionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProductAttributeTypeId");

                    b.HasIndex("ProductBrandId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductStatusId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Featured")
                        .HasColumnType("bit")
                        .HasComment("ویژه");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("نام");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasComment("محصول مرتبط");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام مقدار");

                    b.Property<string>("ValueSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه مقدار");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Name", "ProductId")
                        .IsUnique();

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductAttributeId")
                        .HasColumnType("int")
                        .HasComment("ویژگی محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeId");

                    b.ToTable("ProductAttributeCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("نام");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductAttributeTypes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeValueCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductAttributeId")
                        .HasColumnType("int")
                        .HasComment("مقدار ویژگی محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeId");

                    b.ToTable("ProductAttributeValueCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.ToTable("ProductTypeAttributeGroups");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroupAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeAttributeGroupId")
                        .HasColumnType("int")
                        .HasComment("گروه بندی نوع ویژگی محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeAttributeGroupId");

                    b.ToTable("ProductTypeAttributeGroupAttributes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroupCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeAttributeGroupId")
                        .HasColumnType("int")
                        .HasComment("گروه نوع ویژگی محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeAttributeGroupId");

                    b.ToTable("ProductTypeAttributeGroupCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasComment("محصول مرتبط");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductDisplayVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("نام نمایشی محصول");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasComment("محصول مرتبط");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Name", "ProductId")
                        .IsUnique();

                    b.ToTable("ProductDisplayVariants");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Image")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("فایل");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("ترتیب");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasComment("محصول مرتبط");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<Guid?>("Related7SoftKindId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Related7SoftProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Related7SoftProductKindId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KindId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductKinds");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("نوع گزینه محصول");

                    b.HasKey("Id");

                    b.ToTable("ProductOptionColors");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColorCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductOptionColorId")
                        .HasColumnType("int")
                        .HasComment("مقدار ویژگی رنگ محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("ProductOptionColorId");

                    b.ToTable("ProductOptionColorCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionValueColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رنگ");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<int>("ProductOptionColorId")
                        .HasColumnType("int")
                        .HasComment("ویژگی رنگ محصول");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.HasIndex("ProductOptionColorId");

                    b.ToTable("ProductOptionValueColors");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("نوع گزینه محصول");

                    b.HasKey("Id");

                    b.ToTable("ProductOptionMaterials");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterialCustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductOptionMaterialId")
                        .HasColumnType("int")
                        .HasComment("مقدار ویژگی جنس محصول");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار فیلد");

                    b.HasKey("Id");

                    b.HasIndex("ProductOptionMaterialId");

                    b.ToTable("ProductOptionMaterialCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionValueMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام");

                    b.Property<int>("ProductOptionMaterialId")
                        .HasColumnType("int")
                        .HasComment("ویژگی جنس محصول");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان کوتاه");

                    b.HasKey("Id");

                    b.HasIndex("ProductOptionMaterialId");

                    b.ToTable("ProductOptionValueMaterials");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("مقدار");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ قیمت");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MainPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("قیمت اصلی");

                    b.Property<int>("ProductAttributeOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeOptionId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaxSalePriceNonCompanyProductPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)")
                        .HasComment("سقف قیمت فروش کالای غیر شرکتی-درصد");

                    b.Property<double>("MaxStockQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("مقدار حداکثر موجودی");

                    b.Property<double>("MinStockQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("مقدار حداقل موجودی");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("SafetyStockQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("مقدار ذخیره احتیاطی");

                    b.Property<double>("TotalCount")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("تعداد");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeOptions");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOptionRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Availability")
                        .HasColumnType("int")
                        .HasComment("قابلیت دسترسی");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CurrentMaxOrderQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("حداکثر مقدار سفارش گذاری کنونی");

                    b.Property<double>("CurrentMinOrderQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("حداقل مقدار سفارش گذاری کنونی");

                    b.Property<int>("CustomerTypeEnum")
                        .HasColumnType("int");

                    b.Property<double>("DiscountPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)")
                        .HasComment("درصد تخفیف روی کالا");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MainMaxOrderQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("حداکثر مقدار سفارش گذاری اصلی");

                    b.Property<double>("MainMinOrderQty")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("حداقل مقدار سفارش گذاری اصلی");

                    b.Property<double>("MinimumStockToDisplayProductForThisCustomerTypeEnum")
                        .HasPrecision(18, 3)
                        .HasColumnType("float(18)")
                        .HasComment("حداقل موجودی کالا برای نمایش کالا به کاربر");

                    b.Property<int>("ProductAttributeOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeOptionId", "CustomerTypeEnum")
                        .IsUnique();

                    b.ToTable("ProductAttributeOptionRoles");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOptionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام گزینه ساختاری");

                    b.Property<int>("ProductAttributeOptionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار ویژگی محصول");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeOptionId");

                    b.ToTable("ProductAttributeOptionValues");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftProductStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductStatuses");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftProductTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasComment("فیلد شمارنده");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("توضیحات");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizedCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("شمارنده داخلی");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام فارسی");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("نام لاتین");

                    b.Property<Guid?>("Related7SoftProviderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کلید اصلی در دیتابیس قبلی");

                    b.HasKey("Id");

                    b.HasIndex("LocalizedName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام مولف");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("محتوا");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("نویسنده نظر");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ ثبت");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasComment("محصول مرتبط");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasComment("امتیازدهی");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان انگلیسی");

                    b.Property<string>("FaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان فارسی");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnTitle")
                        .IsUnique();

                    b.HasIndex("FaTitle")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.RequestsCluster.RequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("آدرس api");

                    b.Property<int>("ApiType")
                        .HasColumnType("int")
                        .HasComment("نوع api");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasComment("زمان زدن درخواست");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("پیام خطا");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("بدنه درخواست");

                    b.Property<int>("RequestType")
                        .HasColumnType("int")
                        .HasComment("نوع درخواست");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("int")
                        .HasComment("نتیجه درخواست");

                    b.HasKey("Id");

                    b.ToTable("RequestLogs");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CostRefundType")
                        .HasColumnType("int")
                        .HasComment("شیوه بازپرداخت");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("زمان ثبت بازگشت سفارش");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAccountInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("اطلاعات حساب");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شماره");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("سفارش مرتبط");

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasComment("تعداد");

                    b.Property<int>("ReturnOrderTransportationType")
                        .HasColumnType("int")
                        .HasComment("شیوه بازگشت کالا");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("جمع قیمت کل محصولات");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("رمز مبادله با سون");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("مبلغ پرداختی");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("ReturnOrders");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit")
                        .HasComment("پذیرفته شده");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasComment("تعداد");

                    b.Property<int>("ReturnOrderItemGroupId")
                        .HasColumnType("int")
                        .HasComment("گروه آیتم سفارش مرتبط");

                    b.Property<int>("ReturnOrderReasonId")
                        .HasColumnType("int")
                        .HasComment("دلیل بازگشت کالا");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("جمع کل قیمت سفارش بازگشتی");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderItemGroupId");

                    b.ToTable("ReturnOrderItems");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("توضیحات");

                    b.Property<Guid>("Image")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReturnOrderItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderItemId");

                    b.ToTable("ReturnOrderItemDocuments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("قیمت واحد");

                    b.Property<int>("ProductAttributeOptionId")
                        .HasColumnType("int");

                    b.Property<string>("ProductLocalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام فارسی قطعه");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام لاتین قطعه");

                    b.Property<string>("ProductNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("کد کالا");

                    b.Property<int>("ReturnOrderId")
                        .HasColumnType("int");

                    b.Property<double>("TotalDiscountPercent")
                        .HasColumnType("float")
                        .HasComment("درصد تخفیف محاسبه شده کل");

                    b.Property<double>("TotalQuantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeOptionId");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("ReturnOrderItemGroups");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroupProductAttributeOptionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام گزینه ساختاری");

                    b.Property<int>("ReturnOrderItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("مقدار ویژگی محصول");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderItemGroupId");

                    b.ToTable("ReturnOrderItemGroupProductAttributeOptionValues");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderStateBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReturnOrderId")
                        .HasColumnType("int");

                    b.Property<int>("ReturnOrderStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("ReturnOrderStateBases");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("مبلغ");

                    b.Property<int>("ReturnOrderId")
                        .HasColumnType("int")
                        .HasComment("سفارش بازشگت مرتبط");

                    b.Property<int>("ReturnOrderTotalApplyType")
                        .HasColumnType("int")
                        .HasComment("الگوی اعمال هزینه");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("عنوان");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("نوع");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("ReturnOrderTotals");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderTotalDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("توضیحات");

                    b.Property<Guid>("Image")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("تصویر");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReturnOrderTotalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderTotalId");

                    b.ToTable("ReturnOrderTotalDocuments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressDetails1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("جزئیات آدرس");

                    b.Property<string>("AddressDetails2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شهر");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شرکت");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasComment("کشور");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("مشتری مرتبط");

                    b.Property<bool>("Default")
                        .HasColumnType("bit")
                        .HasComment("پیش فرض است؟");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("کد پستی");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("منطقه");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("عنوان");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Postcode", "CustomerId")
                        .IsUnique()
                        .HasFilter("CustomerId IS NOT NULL");

                    b.HasIndex("Title", "CustomerId")
                        .IsUnique()
                        .HasFilter("CustomerId IS NOT NULL");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.Credit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("تاریخ ثبت");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifierUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("شناسه کاربر تغییردهنده");

                    b.Property<string>("ModifierUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام کاربر تغییردهنده");

                    b.Property<string>("OrderToken")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("شماره سفارش مربوطه");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("مقدار اعتبار");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderToken")
                        .IsUnique()
                        .HasFilter("[OrderToken] IS NOT NULL");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Avatar")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerTypeEnum")
                        .HasColumnType("int");

                    b.Property<double>("DiscountPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)")
                        .HasComment("درصد تخفیف");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeEnum")
                        .IsUnique();

                    b.ToTable("CustomerTypes");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Avatar")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("آواتار");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductAttributeTypeProductTypeAttributeGroup", b =>
                {
                    b.Property<int>("AttributeGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductAttributeTypesId")
                        .HasColumnType("int");

                    b.HasKey("AttributeGroupsId", "ProductAttributeTypesId");

                    b.HasIndex("ProductAttributeTypesId");

                    b.ToTable("ProductAttributeTypeProductTypeAttributeGroup");
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ProductTag");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Payments.CashPayment", b =>
                {
                    b.HasBaseType("Onyx.Domain.Entities.OrdersCluster.Payments.OrderPayment");

                    b.HasDiscriminator().HasValue("CashPayment");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Payments.CreditPayment", b =>
                {
                    b.HasBaseType("Onyx.Domain.Entities.OrdersCluster.Payments.OrderPayment");

                    b.HasDiscriminator().HasValue("CreditPayment");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Payments.OnlinePayment", b =>
                {
                    b.HasBaseType("Onyx.Domain.Entities.OrdersCluster.Payments.OrderPayment");

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayGateTranId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rrn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SalesOrderId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("OnlinePayment");
                });

            modelBuilder.Entity("BadgeProductAttributeOption", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.Badge", null)
                        .WithMany()
                        .HasForeignKey("BadgesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", null)
                        .WithMany()
                        .HasForeignKey("ProductAttributeOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.Comment", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.BlogsCluster.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.Post", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.CategoriesCluster.BlogCategory", "BlogCategory")
                        .WithMany("Posts")
                        .HasForeignKey("BlogCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BlogCategory");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.WidgetComment", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Author")
                        .WithMany("WidgetComments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Family", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.BrandsCluster.VehicleBrand", "VehicleBrand")
                        .WithMany("Families")
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleBrand");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Kind", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.BrandsCluster.Model", "Model")
                        .WithMany("Kinds")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Model", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.BrandsCluster.Family", "Family")
                        .WithMany("Models")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.ProductBrand", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.InfoCluster.Country", "Country")
                        .WithMany("ProductBrands")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Vehicle", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.BrandsCluster.Kind", "Kind")
                        .WithMany("Vehicles")
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Kind");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.VehicleBrand", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.InfoCluster.Country", "Country")
                        .WithMany("VehicleBrands")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.BlogCategory", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.CategoriesCluster.BlogCategory", "BlogParentCategory")
                        .WithMany("BlogChildrenCategories")
                        .HasForeignKey("BlogParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BlogParentCategory");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.BlogCategoryCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.CategoriesCluster.BlogCategory", "BlogCategory")
                        .WithMany("BlogCategoryCustomFields")
                        .HasForeignKey("BlogCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogCategory");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.ProductCategory", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.CategoriesCluster.ProductCategory", "ProductParentCategory")
                        .WithMany("ProductChildrenCategories")
                        .HasForeignKey("ProductParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProductParentCategory");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.ProductCategoryCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.CategoriesCluster.ProductCategory", "ProductCategory")
                        .WithMany("ProductCategoryCustomFields")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CustomerSupportCluster.CustomerTicket", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Customer")
                        .WithMany("CustomerTickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.TeamMember", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.InfoCluster.AboutUs", "AboutUs")
                        .WithMany("TeamMembers")
                        .HasForeignKey("AboutUsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AboutUs");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.Testimonial", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.InfoCluster.AboutUs", "AboutUs")
                        .WithMany("Testimonials")
                        .HasForeignKey("AboutUsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AboutUs");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.FooterCluster.FooterLink", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.LayoutsCluster.FooterCluster.FooterLinkContainer", "FooterLinkContainer")
                        .WithMany("Links")
                        .HasForeignKey("FooterLinkContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FooterLinkContainer");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.HeaderCluster.Link", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.LayoutsCluster.HeaderCluster.Link", "ParentLink")
                        .WithMany("ChildLinks")
                        .HasForeignKey("ParentLinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentLink");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Order", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Onyx.Domain.Entities.OrdersCluster.OrderAddress", "OrderAddress", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .HasColumnType("int");

                            b1.Property<string>("AddressDetails1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressDetails1")
                                .HasComment("جزئیات آدرس1");

                            b1.Property<string>("AddressDetails2")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressDetails2")
                                .HasComment("جزئیات آدرس2");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressCity")
                                .HasComment("شهر");

                            b1.Property<string>("Company")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressCompany")
                                .HasComment("شرکت");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressCountry")
                                .HasComment("کشور");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<bool>("IsActive")
                                .HasColumnType("bit");

                            b1.Property<bool?>("IsDeleted")
                                .HasColumnType("bit");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressPostcode")
                                .HasComment("کد پستی");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressState")
                                .HasComment("منطقه");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AddressTitle")
                                .HasComment("عنوان");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("OrderAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItem", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", "ProductAttributeOption")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductAttributeOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductAttributeOption");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItemOption", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.OrderItem", "OrderItem")
                        .WithMany("Options")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItemProductAttributeOptionValue", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.OrderItem", "OrderItem")
                        .WithMany("OptionValues")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderStateBase", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.Order", "Order")
                        .WithMany("OrderStateHistory")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderTotal", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.Order", "Order")
                        .WithMany("Totals")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Payments.OrderPayment", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.Order", "Order")
                        .WithOne("PaymentMethod")
                        .HasForeignKey("Onyx.Domain.Entities.OrdersCluster.Payments.OrderPayment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.CountingUnit", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.CountingUnitType", "CountingUnitType")
                        .WithMany("CountingUnits")
                        .HasForeignKey("CountingUnitTypeId");

                    b.Navigation("CountingUnitType");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Product", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColor", "ColorOption")
                        .WithMany("Products")
                        .HasForeignKey("ColorOptionId");

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.CountingUnit", "CommonCountingUnit")
                        .WithMany("ProductsForCommonCountingUnit")
                        .HasForeignKey("CommonCountingUnitId");

                    b.HasOne("Onyx.Domain.Entities.InfoCluster.Country", "Country")
                        .WithMany("Products")
                        .HasForeignKey("CountryId");

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.CountingUnit", "MainCountingUnit")
                        .WithMany("ProductsForMainCountingUnit")
                        .HasForeignKey("MainCountingUnitId");

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterial", "MaterialOption")
                        .WithMany("Products")
                        .HasForeignKey("MaterialOptionId");

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeType", "ProductAttributeType")
                        .WithMany("Products")
                        .HasForeignKey("ProductAttributeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.BrandsCluster.ProductBrand", "ProductBrand")
                        .WithMany("Products")
                        .HasForeignKey("ProductBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.CategoriesCluster.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductStatus", "ProductStatus")
                        .WithMany("Products")
                        .HasForeignKey("ProductStatusId");

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderId");

                    b.Navigation("ColorOption");

                    b.Navigation("CommonCountingUnit");

                    b.Navigation("Country");

                    b.Navigation("MainCountingUnit");

                    b.Navigation("MaterialOption");

                    b.Navigation("ProductAttributeType");

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductStatus");

                    b.Navigation("ProductType");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttribute", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductAttributeCustomFields")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeValueCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductAttributeValueCustomFields")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroupAttribute", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroup", "ProductTypeAttributeGroup")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductTypeAttributeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTypeAttributeGroup");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroupCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroup", "ProductTypeAttributeGroup")
                        .WithMany("ProductTypeAttributeGroupCustomFields")
                        .HasForeignKey("ProductTypeAttributeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTypeAttributeGroup");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany("ProductCustomFields")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductDisplayVariant", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany("ProductDisplayVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductImage", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductKind", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.BrandsCluster.Kind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kind");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColorCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColor", "ProductOptionColor")
                        .WithMany("ProductOptionColorCustomFields")
                        .HasForeignKey("ProductOptionColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductOptionColor");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionValueColor", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColor", "ProductOptionColor")
                        .WithMany("Values")
                        .HasForeignKey("ProductOptionColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductOptionColor");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterialCustomField", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterial", "ProductOptionMaterial")
                        .WithMany("ProductOptionMaterialCustomFields")
                        .HasForeignKey("ProductOptionMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductOptionMaterial");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionValueMaterial", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterial", "ProductOptionMaterial")
                        .WithMany("Values")
                        .HasForeignKey("ProductOptionMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductOptionMaterial");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.Price", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", "ProductAttributeOption")
                        .WithMany("Prices")
                        .HasForeignKey("ProductAttributeOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttributeOption");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany("AttributeOptions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOptionRole", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", "ProductAttributeOption")
                        .WithMany("ProductAttributeOptionRoles")
                        .HasForeignKey("ProductAttributeOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttributeOption");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOptionValue", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", "ProductAttributeOption")
                        .WithMany("OptionValues")
                        .HasForeignKey("ProductAttributeOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttributeOption");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Review", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrder", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.OrdersCluster.Order", "Order")
                        .WithMany("ReturnOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItem", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroup", "ReturnOrderItemGroup")
                        .WithMany("ReturnOrderItems")
                        .HasForeignKey("ReturnOrderItemGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderReason", "ReturnOrderReason", b1 =>
                        {
                            b1.Property<int>("ReturnOrderItemId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("CustomerType")
                                .HasColumnType("int")
                                .HasComment("نوع دلیل سمت مشتری");

                            b1.Property<string>("Details")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasComment("توضیحات");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<bool>("IsActive")
                                .HasColumnType("bit");

                            b1.Property<bool?>("IsDeleted")
                                .HasColumnType("bit");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("OrganizationType")
                                .HasColumnType("int")
                                .HasComment("نوع دلیل سمت سازمان");

                            b1.Property<int>("ReturnOrderReasonType")
                                .HasColumnType("int")
                                .HasComment("نوع کلی");

                            b1.HasKey("ReturnOrderItemId");

                            b1.ToTable("ReturnOrderReasons");

                            b1.WithOwner("ReturnOrderItem")
                                .HasForeignKey("ReturnOrderItemId");

                            b1.Navigation("ReturnOrderItem");
                        });

                    b.Navigation("ReturnOrderItemGroup");

                    b.Navigation("ReturnOrderReason")
                        .IsRequired();
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemDocument", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItem", "ReturnOrderItem")
                        .WithMany("ReturnOrderItemDocuments")
                        .HasForeignKey("ReturnOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnOrderItem");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroup", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", "ProductAttributeOption")
                        .WithMany("ReturnOrderItemGroups")
                        .HasForeignKey("ProductAttributeOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrder", "ReturnOrder")
                        .WithMany("ItemGroups")
                        .HasForeignKey("ReturnOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttributeOption");

                    b.Navigation("ReturnOrder");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroupProductAttributeOptionValue", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroup", "ReturnOrderItemGroup")
                        .WithMany("OptionValues")
                        .HasForeignKey("ReturnOrderItemGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnOrderItemGroup");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderStateBase", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrder", "ReturnOrder")
                        .WithMany("ReturnOrderStateHistory")
                        .HasForeignKey("ReturnOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnOrder");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderTotal", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrder", "ReturnOrder")
                        .WithMany("Totals")
                        .HasForeignKey("ReturnOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnOrder");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderTotalDocument", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderTotal", "ReturnOrderTotal")
                        .WithMany("ReturnOrderTotalDocuments")
                        .HasForeignKey("ReturnOrderTotalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnOrderTotal");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.Address", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.InfoCluster.Country", "Country")
                        .WithMany("Addresses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.Credit", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.UserProfilesCluster.Customer", "Customer")
                        .WithMany("Credits")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProductAttributeTypeProductTypeAttributeGroup", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroup", null)
                        .WithMany()
                        .HasForeignKey("AttributeGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeType", null)
                        .WithMany()
                        .HasForeignKey("ProductAttributeTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onyx.Domain.Entities.ProductsCluster.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BlogsCluster.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Family", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Kind", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.Model", b =>
                {
                    b.Navigation("Kinds");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.ProductBrand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.BrandsCluster.VehicleBrand", b =>
                {
                    b.Navigation("Families");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.BlogCategory", b =>
                {
                    b.Navigation("BlogCategoryCustomFields");

                    b.Navigation("BlogChildrenCategories");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.CategoriesCluster.ProductCategory", b =>
                {
                    b.Navigation("ProductCategoryCustomFields");

                    b.Navigation("ProductChildrenCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.AboutUs", b =>
                {
                    b.Navigation("TeamMembers");

                    b.Navigation("Testimonials");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.InfoCluster.Country", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("ProductBrands");

                    b.Navigation("Products");

                    b.Navigation("VehicleBrands");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.FooterCluster.FooterLinkContainer", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.LayoutsCluster.HeaderCluster.Link", b =>
                {
                    b.Navigation("ChildLinks");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.Order", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("OrderStateHistory");

                    b.Navigation("PaymentMethod");

                    b.Navigation("ReturnOrders");

                    b.Navigation("Totals");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.OrdersCluster.OrderItem", b =>
                {
                    b.Navigation("OptionValues");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.CountingUnit", b =>
                {
                    b.Navigation("ProductsForCommonCountingUnit");

                    b.Navigation("ProductsForMainCountingUnit");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.CountingUnitType", b =>
                {
                    b.Navigation("CountingUnits");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Product", b =>
                {
                    b.Navigation("AttributeOptions");

                    b.Navigation("Attributes");

                    b.Navigation("Images");

                    b.Navigation("ProductCustomFields");

                    b.Navigation("ProductDisplayVariants");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttribute", b =>
                {
                    b.Navigation("ProductAttributeCustomFields");

                    b.Navigation("ProductAttributeValueCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductAttributeType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductAttributesCluster.ProductTypeAttributeGroup", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("ProductTypeAttributeGroupCustomFields");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Color.ProductOptionColor", b =>
                {
                    b.Navigation("ProductOptionColorCustomFields");

                    b.Navigation("Products");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Structure.Material.ProductOptionMaterial", b =>
                {
                    b.Navigation("ProductOptionMaterialCustomFields");

                    b.Navigation("Products");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductOptionsCluster.Value.ProductAttributeOption", b =>
                {
                    b.Navigation("OptionValues");

                    b.Navigation("OrderItems");

                    b.Navigation("Prices");

                    b.Navigation("ProductAttributeOptionRoles");

                    b.Navigation("ReturnOrderItemGroups");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductStatus", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ProductsCluster.Provider", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrder", b =>
                {
                    b.Navigation("ItemGroups");

                    b.Navigation("ReturnOrderStateHistory");

                    b.Navigation("Totals");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItem", b =>
                {
                    b.Navigation("ReturnOrderItemDocuments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderItemGroup", b =>
                {
                    b.Navigation("OptionValues");

                    b.Navigation("ReturnOrderItems");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.ReturnOrdersCluster.ReturnOrderTotal", b =>
                {
                    b.Navigation("ReturnOrderTotalDocuments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Credits");

                    b.Navigation("CustomerTickets");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Vehicles");

                    b.Navigation("WidgetComments");
                });

            modelBuilder.Entity("Onyx.Domain.Entities.UserProfilesCluster.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
